// Auto-generated from Foundry contract compilation
// Do not edit this file manually - run 'npm run generate-abis' to regenerate

export const abi = [
  {
    "type": "function",
    "name": "getFixDescriptor",
    "inputs": [],
    "outputs": [
      {
        "name": "descriptor",
        "type": "tuple",
        "internalType": "struct IFixDescriptor.FixDescriptor",
        "components": [
          {
            "name": "fixMajor",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "fixMinor",
            "type": "uint16",
            "internalType": "uint16"
          },
          {
            "name": "dictHash",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          {
            "name": "fixRoot",
            "type": "bytes32",
            "internalType": "bytes32"
          },
          {
            "name": "fixCBORPtr",
            "type": "address",
            "internalType": "address"
          },
          {
            "name": "fixCBORLen",
            "type": "uint32",
            "internalType": "uint32"
          },
          {
            "name": "fixURI",
            "type": "string",
            "internalType": "string"
          }
        ]
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "getFixRoot",
    "inputs": [],
    "outputs": [
      {
        "name": "root",
        "type": "bytes32",
        "internalType": "bytes32"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "function",
    "name": "verifyField",
    "inputs": [
      {
        "name": "pathCBOR",
        "type": "bytes",
        "internalType": "bytes"
      },
      {
        "name": "value",
        "type": "bytes",
        "internalType": "bytes"
      },
      {
        "name": "proof",
        "type": "bytes32[]",
        "internalType": "bytes32[]"
      },
      {
        "name": "directions",
        "type": "bool[]",
        "internalType": "bool[]"
      }
    ],
    "outputs": [
      {
        "name": "valid",
        "type": "bool",
        "internalType": "bool"
      }
    ],
    "stateMutability": "view"
  },
  {
    "type": "event",
    "name": "FixDescriptorSet",
    "inputs": [
      {
        "name": "fixRoot",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "dictHash",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "fixCBORPtr",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      },
      {
        "name": "fixCBORLen",
        "type": "uint32",
        "indexed": false,
        "internalType": "uint32"
      }
    ],
    "anonymous": false
  },
  {
    "type": "event",
    "name": "FixDescriptorUpdated",
    "inputs": [
      {
        "name": "oldRoot",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "newRoot",
        "type": "bytes32",
        "indexed": true,
        "internalType": "bytes32"
      },
      {
        "name": "newPtr",
        "type": "address",
        "indexed": false,
        "internalType": "address"
      }
    ],
    "anonymous": false
  }
] as const;

export type IFixDescriptorAbi = typeof abi;
